# Generated by Django 2.0.7 on 2018-12-28 12:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ControlGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.IntegerField()),
                ('name', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ControlNormalOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fm_id', models.CharField(max_length=6)),
                ('fm_stime', models.CharField(max_length=4)),
                ('fm_etime', models.CharField(max_length=4)),
                ('fm_stemp', models.FloatField()),
                ('fm_etemp', models.FloatField()),
                ('fm_op_time', models.IntegerField()),
                ('fm_bk_time', models.IntegerField()),
                ('vm_id', models.CharField(max_length=6)),
                ('vm_stime', models.CharField(max_length=4)),
                ('vm_etime', models.CharField(max_length=4)),
                ('vm_stemp', models.FloatField()),
                ('vm_etemp', models.FloatField()),
                ('vm_op_time', models.IntegerField()),
                ('vm_bk_time', models.IntegerField()),
                ('ea_id', models.CharField(max_length=6)),
                ('ea_stime', models.CharField(max_length=4)),
                ('ea_etime', models.CharField(max_length=4)),
                ('ea_stemp', models.FloatField()),
                ('ea_etemp', models.FloatField()),
                ('ea_op_time', models.IntegerField()),
                ('ea_bk_time', models.IntegerField()),
                ('control_group', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='palm.ControlGroup')),
            ],
        ),
        migrations.CreateModel(
            name='ControlOpenAutoGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('om_name', models.IntegerField()),
                ('om_mode', models.CharField(choices=[('01', '활성화'), ('02', '비활성화')], max_length=2)),
                ('om_stime', models.CharField(max_length=4)),
                ('om_etime', models.CharField(max_length=4)),
                ('om_otemp', models.FloatField()),
                ('om_ctemp', models.FloatField()),
                ('control_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='palm.ControlGroup')),
            ],
        ),
        migrations.CreateModel(
            name='ControlOpenGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('og_name', models.IntegerField()),
                ('og_mode', models.CharField(choices=[('01', '활성화'), ('02', '비활성화')], max_length=2)),
                ('og_tot', models.IntegerField()),
                ('og_ot', models.IntegerField()),
                ('og_lm_id', models.CharField(max_length=6)),
                ('og_rm_id', models.CharField(max_length=6)),
                ('control_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='palm.ControlGroup')),
            ],
        ),
        migrations.CreateModel(
            name='ControlOpenOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motor_num', models.IntegerField()),
                ('og_num', models.IntegerField()),
                ('om_mode', models.CharField(choices=[('01', '자동'), ('02', '수동')], max_length=2)),
                ('om_delay_time', models.IntegerField()),
                ('om_open_sequence', models.CharField(choices=[('01', '1번 그룹부터'), ('02', '2번 그룹부터')], max_length=2)),
                ('om_close_sequence', models.CharField(choices=[('01', '1번 그룹부터'), ('02', '2번 그룹부터')], max_length=2)),
                ('om_rain_mode', models.CharField(choices=[('01', '활성화'), ('02', '비활성화')], max_length=2)),
                ('om_rain_option', models.IntegerField()),
                ('om_high_temp_mode', models.CharField(choices=[('01', '활성화'), ('02', '비활성화')], max_length=2)),
                ('om_high_temp_option', models.IntegerField()),
                ('control_group', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='palm.ControlGroup')),
            ],
        ),
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vegetable_type', models.CharField(max_length=100)),
                ('farm_area', models.IntegerField()),
                ('farm_type1', models.CharField(max_length=10)),
                ('farm_type2', models.CharField(max_length=10)),
                ('farm_house_num', models.CharField(max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Gcg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_num', models.CharField(max_length=8)),
                ('sw_ver', models.CharField(max_length=2)),
                ('sensing_period', models.CharField(max_length=6)),
                ('state', models.CharField(choices=[('01', 'Normal'), ('02', 'Register Mode'), ('03', 'Battery Error'), ('04', 'Voltage Error'), ('05', 'Communication Error'), ('ff', 'Unknown Error')], max_length=2)),
                ('snode_num', models.IntegerField()),
                ('anode_num', models.IntegerField()),
                ('farm', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='palm.Farm')),
            ],
        ),
        migrations.CreateModel(
            name='SensorInfoOrValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temp_id1', models.CharField(max_length=6)),
                ('temp_id2', models.CharField(max_length=6)),
                ('temp_id3', models.CharField(max_length=6)),
                ('temp_value1', models.FloatField()),
                ('temp_value2', models.FloatField()),
                ('temp_value3', models.FloatField()),
                ('humd_id1', models.CharField(max_length=6)),
                ('humd_id2', models.CharField(max_length=6)),
                ('humd_id3', models.CharField(max_length=6)),
                ('humd_value1', models.FloatField()),
                ('humd_value2', models.FloatField()),
                ('humd_value3', models.FloatField()),
                ('co2_id1', models.CharField(max_length=6)),
                ('co2_id2', models.CharField(max_length=6)),
                ('co2_id3', models.CharField(max_length=6)),
                ('co2_value1', models.FloatField()),
                ('co2_value2', models.FloatField()),
                ('co2_value3', models.FloatField()),
                ('soil_temp_id1', models.CharField(max_length=6)),
                ('soil_temp_id2', models.CharField(max_length=6)),
                ('soil_temp_id3', models.CharField(max_length=6)),
                ('soil_temp_value1', models.FloatField()),
                ('soil_temp_value2', models.FloatField()),
                ('soil_temp_value3', models.FloatField()),
                ('soil_humd_id1', models.CharField(max_length=6)),
                ('soil_humd_id2', models.CharField(max_length=6)),
                ('soil_humd_id3', models.CharField(max_length=6)),
                ('soil_humd_value1', models.FloatField()),
                ('soil_humd_value2', models.FloatField()),
                ('soil_humd_value3', models.FloatField()),
                ('soil_ec_id1', models.CharField(max_length=6)),
                ('soil_ec_id2', models.CharField(max_length=6)),
                ('soil_ec_id3', models.CharField(max_length=6)),
                ('soil_ec_value1', models.FloatField()),
                ('soil_ec_value2', models.FloatField()),
                ('soil_ec_value3', models.FloatField()),
                ('culture_medium_temp_id1', models.CharField(max_length=6)),
                ('culture_medium_temp_id2', models.CharField(max_length=6)),
                ('cultrue_medium_temp_id3', models.CharField(max_length=6)),
                ('culture_medium_temp_value1', models.FloatField()),
                ('culture_medium_temp_value2', models.FloatField()),
                ('culture_medium_temp_value3', models.FloatField()),
                ('nutrient_solution_ec_id1', models.CharField(max_length=6)),
                ('nutrient_solution_ec_id2', models.CharField(max_length=6)),
                ('nutrient_solution_ec_id3', models.CharField(max_length=6)),
                ('nutrient_solution_ec_value1', models.FloatField()),
                ('nutrient_solution_ec_value2', models.FloatField()),
                ('nutrient_solution_ec_value3', models.FloatField()),
                ('nutrient_solution_ph_id1', models.CharField(max_length=6)),
                ('nutrient_solution_ph_id2', models.CharField(max_length=6)),
                ('nutrient_solution_ph_id3', models.CharField(max_length=6)),
                ('nutrient_solution_ph_value1', models.FloatField()),
                ('nutrient_solution_ph_value2', models.FloatField()),
                ('nutrient_solution_ph_value3', models.FloatField()),
                ('control_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='palm.ControlGroup')),
            ],
        ),
        migrations.CreateModel(
            name='WeatherInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rain_value', models.FloatField()),
                ('temp_value', models.FloatField()),
                ('humd_value', models.FloatField()),
                ('wind_dir_value', models.FloatField()),
                ('wind_spd_value', models.FloatField()),
                ('gcg', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='palm.Gcg')),
            ],
        ),
        migrations.AddField(
            model_name='controlgroup',
            name='gcg',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='palm.Gcg'),
        ),
    ]
